{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workplaces\\\\Study\\\\.NET\\\\Assessment\\\\Assessment\\\\ecommerce_reactjs\\\\src\\\\pages\\\\ProductPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Table, Pagination, Image, Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\n\n// Axios Setup\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:5203/api/'\n});\nconst token = localStorage.getItem('token');\nconst roles = JSON.parse(localStorage.getItem('roles'));\n\n// Add token to POST/PUT requests\naxiosInstance.interceptors.request.use(config => {\n  if ((config.method === 'post' || config.method === 'put') && token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nconst ProductPage = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [isEditing, setIsEditing] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const navigate = useNavigate();\n\n  // Auth Check\n  useEffect(() => {\n    const isAdminUser = token && roles && roles.includes('Admin User');\n    setIsLoggedIn(!!token);\n    setIsAdmin(isAdminUser);\n    if (!isAdminUser) navigate('/login');\n  }, [navigate]);\n\n  // Fetch Data\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await axiosInstance.get('Category');\n        setCategories(response.data);\n      } catch (error) {\n        console.error('Failed to fetch categories', error);\n      }\n    };\n    const fetchProducts = async () => {\n      try {\n        const response = await axiosInstance.get('Product/pagination', {\n          params: {\n            pageNumber: currentPage,\n            pageSize: 10\n          }\n        });\n        setProducts(response.data.items || []);\n        setTotalPages(response.data.totalPages || 1);\n      } catch (error) {\n        console.error('Failed to fetch products', error);\n      }\n    };\n    fetchCategories();\n    fetchProducts();\n  }, [currentPage]);\n\n  // Handlers\n  const handleEdit = id => setIsEditing(id);\n  const handleCancel = () => {\n    setIsEditing(null);\n    setSelectedImage(null);\n  };\n  const handleInputChange = (e, productId) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProducts(prev => prev.map(p => p.productId === productId ? {\n      ...p,\n      [name]: value\n    } : p));\n  };\n  const handleCategoryChange = (e, productId) => {\n    const categoryId = e.target.value;\n    setProducts(prev => prev.map(p => p.productId === productId ? {\n      ...p,\n      category: {\n        categoryId\n      }\n    } : p));\n  };\n  const handleImageUpload = (e, productId) => {\n    const file = e.target.files[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append('image', file);\n      axiosInstance.post('Product/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        setProducts(prev => prev.map(p => p.productId === productId ? {\n          ...p,\n          productImageUrl: res.data.imageUrl\n        } : p));\n      }).catch(error => console.error('Failed to upload image', error));\n    }\n  };\n  const handleSave = async productId => {\n    var _product$category;\n    const product = products.find(p => p.productId === productId);\n    const updatedProduct = {\n      ...product,\n      categoryId: ((_product$category = product.category) === null || _product$category === void 0 ? void 0 : _product$category.categoryId) || product.categoryId\n    };\n    try {\n      await axiosInstance.put(`Product/${productId}`, updatedProduct);\n      setIsEditing(null);\n      setSelectedImage(null);\n      setProducts(prev => prev.map(p => p.productId === productId ? updatedProduct : p));\n    } catch (error) {\n      console.error('Failed to update product', error);\n    }\n  };\n\n  // Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"mb-3\",\n      onClick: () => alert('Create Product'),\n      children: \"Create Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Updated Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(p => {\n          var _p$category, _p$category2;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.productId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditing === p.productId ? /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"productName\",\n                value: p.productName,\n                onChange: e => handleInputChange(e, p.productId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this) : p.productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditing === p.productId ? /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: ((_p$category = p.category) === null || _p$category === void 0 ? void 0 : _p$category.categoryId) || '',\n                onChange: e => handleCategoryChange(e, p.productId),\n                children: categories.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: c.categoryId,\n                  children: c.categoryName\n                }, c.categoryId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this) : ((_p$category2 = p.category) === null || _p$category2 === void 0 ? void 0 : _p$category2.categoryName) || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditing === p.productId ? /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"productDescription\",\n                value: p.productDescription,\n                onChange: e => handleInputChange(e, p.productId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 48\n              }, this) : p.productDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditing === p.productId ? /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"productPrice\",\n                type: \"number\",\n                value: p.productPrice,\n                onChange: e => handleInputChange(e, p.productId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 48\n              }, this) : p.productPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.productImageUrl && /*#__PURE__*/_jsxDEV(Image, {\n                src: `http://localhost:5072${p.productImageUrl}`,\n                width: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.createdDate ? new Date(p.createdDate).toLocaleDateString() : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.updatedDate ? new Date(p.updatedDate).toLocaleDateString() : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditing === p.productId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  onClick: () => handleSave(p.productId),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  onClick: handleCancel,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"warning\",\n                onClick: () => handleEdit(p.productId),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, p.productId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      children: Array.from({\n        length: totalPages\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: index + 1 === currentPage,\n        onClick: () => setCurrentPage(index + 1),\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductPage, \"yvheC+WnPgZ0K1j00DS+6d2ycBg=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductPage;\nexport default ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Button","Table","Pagination","Image","Form","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","axiosInstance","create","baseURL","token","localStorage","getItem","roles","JSON","parse","interceptors","request","use","config","method","headers","error","Promise","reject","ProductPage","_s","products","setProducts","categories","setCategories","currentPage","setCurrentPage","totalPages","setTotalPages","isEditing","setIsEditing","selectedImage","setSelectedImage","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","navigate","isAdminUser","includes","fetchCategories","response","get","data","console","fetchProducts","params","pageNumber","pageSize","items","handleEdit","id","handleCancel","handleInputChange","e","productId","name","value","target","prev","map","p","handleCategoryChange","categoryId","category","handleImageUpload","file","files","formData","FormData","append","post","then","res","productImageUrl","imageUrl","catch","handleSave","_product$category","product","find","updatedProduct","put","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","className","onClick","alert","striped","bordered","hover","_p$category","_p$category2","Control","type","productName","onChange","Select","c","categoryName","productDescription","productPrice","src","width","createdDate","Date","toLocaleDateString","updatedDate","Array","from","length","_","index","Item","active","_c","$RefreshReg$"],"sources":["C:/Workplaces/Study/.NET/Assessment/Assessment/ecommerce_reactjs/src/pages/ProductPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Table, Pagination, Image, Form } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Axios Setup\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:5203/api/',\r\n});\r\n\r\nconst token = localStorage.getItem('token');\r\nconst roles = JSON.parse(localStorage.getItem('roles'));\r\n\r\n// Add token to POST/PUT requests\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    if ((config.method === 'post' || config.method === 'put') && token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nconst ProductPage = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [isEditing, setIsEditing] = useState(null);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Auth Check\r\n  useEffect(() => {\r\n    const isAdminUser = token && roles && roles.includes('Admin User');\r\n    setIsLoggedIn(!!token);\r\n    setIsAdmin(isAdminUser);\r\n    if (!isAdminUser) navigate('/login');\r\n  }, [navigate]);\r\n\r\n  // Fetch Data\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('Category');\r\n        setCategories(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch categories', error);\r\n      }\r\n    };\r\n\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('Product/pagination', {\r\n          params: { pageNumber: currentPage, pageSize: 10 },\r\n        });\r\n        setProducts(response.data.items || []);\r\n        setTotalPages(response.data.totalPages || 1);\r\n      } catch (error) {\r\n        console.error('Failed to fetch products', error);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n    fetchProducts();\r\n  }, [currentPage]);\r\n\r\n  // Handlers\r\n  const handleEdit = (id) => setIsEditing(id);\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(null);\r\n    setSelectedImage(null);\r\n  };\r\n\r\n  const handleInputChange = (e, productId) => {\r\n    const { name, value } = e.target;\r\n    setProducts((prev) =>\r\n      prev.map((p) => (p.productId === productId ? { ...p, [name]: value } : p))\r\n    );\r\n  };\r\n\r\n  const handleCategoryChange = (e, productId) => {\r\n    const categoryId = e.target.value;\r\n    setProducts((prev) =>\r\n      prev.map((p) => (p.productId === productId ? { ...p, category: { categoryId } } : p))\r\n    );\r\n  };\r\n\r\n  const handleImageUpload = (e, productId) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n\r\n      axiosInstance\r\n        .post('Product/upload', formData, { headers: { 'Content-Type': 'multipart/form-data' } })\r\n        .then((res) => {\r\n          setProducts((prev) =>\r\n            prev.map((p) =>\r\n              p.productId === productId ? { ...p, productImageUrl: res.data.imageUrl } : p\r\n            )\r\n          );\r\n        })\r\n        .catch((error) => console.error('Failed to upload image', error));\r\n    }\r\n  };\r\n\r\n  const handleSave = async (productId) => {\r\n    const product = products.find((p) => p.productId === productId);\r\n    const updatedProduct = {\r\n      ...product,\r\n      categoryId: product.category?.categoryId || product.categoryId,\r\n    };\r\n\r\n    try {\r\n      await axiosInstance.put(`Product/${productId}`, updatedProduct);\r\n      setIsEditing(null);\r\n      setSelectedImage(null);\r\n      setProducts((prev) => prev.map((p) => (p.productId === productId ? updatedProduct : p)));\r\n    } catch (error) {\r\n      console.error('Failed to update product', error);\r\n    }\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <div>\r\n      <h2>Product Management</h2>\r\n      {isAdmin && (\r\n        <Button variant=\"primary\" className=\"mb-3\" onClick={() => alert('Create Product')}>\r\n          Create Product\r\n        </Button>\r\n      )}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Category</th>\r\n            <th>Description</th>\r\n            <th>Price</th>\r\n            <th>Image</th>\r\n            <th>Created Date</th>\r\n            <th>Updated Date</th>\r\n            {isAdmin && <th>Actions</th>}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((p) => (\r\n            <tr key={p.productId}>\r\n              <td>{p.productId}</td>\r\n              <td>\r\n                {isEditing === p.productId ? (\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"productName\"\r\n                    value={p.productName}\r\n                    onChange={(e) => handleInputChange(e, p.productId)}\r\n                  />\r\n                ) : (\r\n                  p.productName\r\n                )}\r\n              </td>\r\n              <td>\r\n                {isEditing === p.productId ? (\r\n                  <Form.Select\r\n                    value={p.category?.categoryId || ''}\r\n                    onChange={(e) => handleCategoryChange(e, p.productId)}\r\n                  >\r\n                    {categories.map((c) => (\r\n                      <option key={c.categoryId} value={c.categoryId}>\r\n                        {c.categoryName}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                ) : (\r\n                  p.category?.categoryName || 'N/A'\r\n                )}\r\n              </td>\r\n              <td>{isEditing === p.productId ? <Form.Control name=\"productDescription\" value={p.productDescription} onChange={(e) => handleInputChange(e, p.productId)} /> : p.productDescription}</td>\r\n              <td>{isEditing === p.productId ? <Form.Control name=\"productPrice\" type=\"number\" value={p.productPrice} onChange={(e) => handleInputChange(e, p.productId)} /> : p.productPrice}</td>\r\n              <td>{p.productImageUrl && <Image src={`http://localhost:5072${p.productImageUrl}`} width={50} />}</td>\r\n              <td>{p.createdDate ? new Date(p.createdDate).toLocaleDateString() : 'N/A'}</td>\r\n              <td>{p.updatedDate ? new Date(p.updatedDate).toLocaleDateString() : 'N/A'}</td>\r\n              {isAdmin && (\r\n                <td>\r\n                  {isEditing === p.productId ? (\r\n                    <>\r\n                      <Button variant=\"success\" onClick={() => handleSave(p.productId)}>\r\n                        Save\r\n                      </Button>\r\n                      <Button variant=\"secondary\" onClick={handleCancel}>\r\n                        Cancel\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <Button variant=\"warning\" onClick={() => handleEdit(p.productId)}>\r\n                      Edit\r\n                    </Button>\r\n                  )}\r\n                </td>\r\n              )}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <Pagination>\r\n        {Array.from({ length: totalPages }).map((_, index) => (\r\n          <Pagination.Item key={index} active={index + 1 === currentPage} onClick={() => setCurrentPage(index + 1)}>\r\n            {index + 1}\r\n          </Pagination.Item>\r\n        ))}\r\n      </Pagination>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}